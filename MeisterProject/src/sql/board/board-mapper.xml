<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>
	<entry key="selectList">
		<![CDATA[
		SELECT B.BOARD_NO AS BOARD_NO,
	        B.BOARD_TITLE AS BOARD_TITLE,
	        B.BOARD_CONTENT AS BOARD_CONTENT,
	        B.BOARD_COUNT AS BOARD_COUNT,
	        B.BOARD_RECOMMEND AS BOARD_RECOMMEND,
	        B.USER_NO AS USER_NO,
            R.REPLY_COUNT AS REPLY_COUNT,
	        TO_CHAR(B.BOARD_DATE,'MMDDHH24MI') BOARD_DATE,
	        A.CHANGE_NAME AS CHANGE_NAME,
	        A.FILE_PATH AS FILE_PATH
			FROM BOARD B
			LEFT OUTER JOIN ATTACHMENT A	
			ON A.REF_NO = B.BOARD_NO
            LEFT OUTER JOIN REPLY R 
            ON B.USER_NO = R.REPLY_NO
			WHERE B.BOARD_TYPE = ?
			AND B.STATUS = 'Y' 
			ORDER BY BOARD_DATE DESC
		]]>
	</entry>
	
	<entry key="selectListCount">
		SELECT COUNT(*) BOARD_COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
		  AND BOARD_TYPE = ?
	</entry>  
	
	<entry key="selectListSearch">
		<![CDATA[
		SELECT B.BOARD_NO AS BOARD_NO,
	        B.BOARD_TITLE AS BOARD_TITLE,
	        B.BOARD_CONTENT AS BOARD_CONTENT,
	        B.BOARD_COUNT AS BOARD_COUNT,
	        B.BOARD_RECOMMEND AS BOARD_RECOMMEND,
	        B.USER_NO AS USER_NO,
            R.REPLY_COUNT AS REPLY_COUNT,
	        TO_CHAR(B.BOARD_DATE,'MMDDHH24MI') BOARD_DATE,
	        A.CHANGE_NAME AS CHANGE_NAME,
	        A.FILE_PATH AS FILE_PATH
			FROM BOARD B
			LEFT OUTER JOIN ATTACHMENT A	
			ON A.REF_NO = B.BOARD_NO
            LEFT OUTER JOIN REPLY R 
            ON B.USER_NO = R.REPLY_NO
			WHERE B.BOARD_TYPE = ?
			AND B.STATUS = 'Y' 
			AND B.BOARD_TITLE like ? 
			ORDER BY BOARD_DATE DESC
		]]>
	</entry>
	
	<entry key="selectListSearchCount">
		SELECT COUNT(*) BOARD_COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
		  AND BOARD_TYPE = ?
		  AND B.BOARD_TITLE like ? 
	</entry>  
	
	<entry key="getHotBoard">
		<![CDATA[
		SELECT  BOARD_NO,
                BOARD_TITLE,
                BOARD_CONTENT,
                BOARD_COUNT,
                BOARD_RECOMMEND,
                B.USER_NO,
                REPLY_COUNT,
                BOARD_DATE 
       	FROM BOARD B
        LEFT OUTER JOIN REPLY R USING(BOARD_NO)
		WHERE ROWNUM <= 3 
        AND BOARD_DATE < TO_CHAR(SYSDATE-1,'YYYYMMDD')
        AND B.STATUS = 'Y'
		AND BOARD_TYPE = 1                                
		ORDER BY BOARD_COUNT desc , Board_RECOMMEND desc , REPLY_COUNT desc]]>
	</entry>

	<!-- 게시글 글작성 쿼리문 -->
	<entry key ="insertBoard">
		INSERT INTO BOARD(BOARD_NO, BOARD_TITLE, BOARD_CONTENT, USER_NO, BOARD_TYPE)
		VALUES (SEQ_BNO.NEXTVAL, ?, ?, ?, ?)	
	</entry>
	
	<!-- 게시글 글작성  쿼리문 -->
	<entry key ="insertAttachment">
		INSERT INTO ATTACHMENT(FILE_NO, REF_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH, FILE_LEVEL)
		VALUES (SEQ_FNO.NEXTVAL, SEQ_BNO.CURRVAL, ?, ?, ?, 1)
	</entry>
	
	<entry key="insertNewAttachment">
		INSERT INTO ATTACHMENT(FILE_NO, REF_NO, ORIGIN_NAME, CHANGE_NAME, FILE_PATH)
		VALUES (SEQ_FNO.NEXTVAL, 1, ?, ?, ?)
	</entry>
	
	<!-- 게시글 수정  쿼리문 -->
	<entry key="updateBoard">
		UPDATE BOARD
		SET BOARD_TITLE = ?,
			BOARD_CONTENT = ?
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글 업데이트 쿼리문 -->
	<entry key="updateAttachment">
		UPDATE ATTACHMENT
		SET ORIGIN_NAME = ?,
			CHANGE_NAME = ?,
			FILE_PATH = ?,
			UPLOAD_DATE = SYSDATE
		WHERE FILE_NO = ?
	</entry>
	
	<!-- 게시글 삭제 쿼리문 -->
	<entry key="deleteBoard">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글 삭제 쿼리문 -->
	<entry key="deleteAttachment">
		UPDATE ATTACHMENT
		SET STATUS = 'N'
		WHERE REF_NO = ?
	</entry>
	
	<!-- 게시글 상세보기 쿼리문 -->
	<entry key="selectBoard">
		SELECT 
		    B.BOARD_NO,
		    B.BOARD_TITLE,
		    B.BOARD_CONTENT,
		    B.USER_NO,
		    B.BOARD_DATE,
		    M.NICKNAME,
		    	(SELECT COUNT(BOARD_NO)
		    	FROM REPLY
		    	WHERE BOARD_NO = B.BOARD_NO
		    	) AS REPLY_COUNT,
		    	(SELECT COUNT(BOARD_NO)
		    	FROM RECOMMEND
		    	WHERE BOARD_NO = B.BOARD_NO
		    	) AS BOARD_RECOMMEND
		FROM BOARD B, MEMBER M
		WHERE B.USER_NO = M.USER_NO
		    AND B.STATUS = 'Y'
		    AND BOARD_NO = ?
	</entry>
	
	<!-- 게시글 상세보기 이미지 쿼리문 -->
	<entry key="selectAttachment">
		SELECT FILE_NO,
		       ORIGIN_NAME,
		       CHANGE_NAME,
		       FILE_PATH,
		       FILE_LEVEL
		 FROM ATTACHMENT
		 WHERE REF_NO = ? AND FILE_LEVEL = 1
		 ORDER BY FILE_LEVEL
	</entry>
	
	<!-- 프로필 쿼리문 -->
	<entry key="selectAttachmentThumbnail">
		SELECT FILE_NO,
		       ORIGIN_NAME,
		       CHANGE_NAME,
		       FILE_PATH,
		       FILE_LEVEL
		 FROM ATTACHMENT
		 WHERE REF_NO = ? AND FILE_LEVEL = 5
		 ORDER BY FILE_LEVEL
	</entry>
	
	<entry key="searchList">
	SELECT BOARD_TITLE
	FROM BOARD 
	WHERE BOARD_TYPE = 1
		AND STATUS = 'Y'
		AND @ LIKE ? 
	ORDER BY BOARD_DATE DESC
	</entry>
	
	<entry key="increaseCount">
		UPDATE BOARD
		SET BOARD_COUNT = BOARD_COUNT + 1
		WHERE BOARD_NO = ?
		AND STATUS = 'Y'
	</entry>
	
	<!-- 댓글 작성 쿼리문 -->
	<entry key="insertReply">
		INSERT INTO REPLY(REPLY_NO, REPLY_CONTENT, BOARD_NO, USER_NO)
		VALUES(SEQ_RYNO.NEXTVAL, ?, ?, ?)
	</entry>
	
	<!-- 댓글 리스트 쿼리문 -->
	<entry key="selectReplyList">
		SELECT REPLY_NO, REPLY_CONTENT, USER_NO, M.NICKNAME, TO_CHAR(REPLY_DATE, 'YY/MM/DD HH:MI') REPLY_DATE
		FROM REPLY R
		JOIN MEMBER M using(user_no)
		WHERE R.STATUS = 'Y'
			AND BOARD_NO = ?
		ORDER BY REPLY_DATE DESC, REPLY_NO DESC
	</entry>
	
	<!-- 댓글 수정 쿼리문 -->
	<entry key="updateReply">
		UPDATE REPLY 
		SET REPLY_CONTENT = ?
		WHERE REPLY_NO = ?
	</entry>
	
	<!-- 댓글 삭제 쿼리문 -->
	<entry key="deleteReply">
		UPDATE REPLY
		SET STATUS = 'N'
		WHERE REPLY_NO = ?
	</entry>
	
	<entry key="myCommunity">
		SELECT  BOARD_NO,
                BOARD_TITLE,
                BOARD_CONTENT,
                REPLY_COUNT,
                BOARD_RECOMMEND,
                B.USER_NO,
                TO_CHAR(BOARD_DATE,'YYYY-MM-DD') BOARD_DATE
       	FROM BOARD B
        LEFT OUTER JOIN REPLY R USING(BOARD_NO)
		WHERE B.STATUS = 'Y'
        AND B.USER_NO = ?
	</entry>
	
	<entry key="myReply">
		SELECT 
		    R.REPLY_NO,
		    BOARD_NO,
		    B.BOARD_TITLE,
		    R.REPLY_CONTENT,
		    TO_CHAR(R.REPLY_DATE, 'YY-MM-DD') REPLY_DATE,
		    R.USER_NO
	    FROM REPLY R
	    LEFT OUTER JOIN BOARD B USING(BOARD_NO)
	    WHERE R.STATUS = 'Y'
	    AND R.USER_NO = ?
	</entry>
	
	<entry key="selectListCount2">
		SELECT COUNT(*) BOARD_COUNT
		FROM BOARD
		WHERE STATUS = 'Y'
	  	AND BOARD_TYPE = ?
	</entry>  
	
	<!-- 좋아요 조회 쿼리문 -->
	<entry key="selectRecommend">
		SELECT COUNT(RED_NO) AS CNT
		FROM RECOMMEND
		WHERE BOARD_NO = ?
			AND USER_NO = ?
	</entry>

	<!-- 좋아요 추가 쿼리문 -->
	<entry key="insertRecommend">
		INSERT INTO RECOMMEND(RED_NO, BOARD_NO, USER_NO)
		VALUES(SEQ_RCNO.NEXTVAL, ?, ?)
	</entry>
	
	<!-- 좋아요 삭제 쿼리문 -->
	<entry key="deleteRecommend">
		DELETE RECOMMEND
		WHERE BOARD_NO = ?
			AND USER_NO = ?
	</entry>
	
	<!-- 좋아요 갯수 쿼리문 -->
	<entry key="countRecommend">
		SELECT COUNT(RED_NO) AS CNT
	  	FROM RECOMMEND
	 	WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글 전체 가져오는 쿼리문 -->
	<entry key="selectAllList">
		SELECT BOARD_NO,
			   BOARD_TITLE,
			   BOARD_CONTENT,
			   BOARD_COUNT,
			   BOARD_RECOMMEND,
			   REPLY_COUNT,
			   BOARD_TYPE
		FROM BOARD B
		LEFT OUTER JOIN REPLY R USING(BOARD_NO)
		WHERE B.STATUS = 'Y'
		ORDER BY BOARD_DATE DESC
	</entry>
	
	<!-- 관리자 커뮤니티 게시글 관리 -->
	<entry key="selectBoardList">
	    SELECT
		    B.BOARD_NO,
		    M.USER_ID,
		    M.NICKNAME,
		    B.BOARD_TITLE,
		    B.BOARD_DATE,
		    B.BOARD_CONTENT,
		    B.STATUS
	    FROM BOARD B
	    JOIN MEMBER M USING(USER_NO)
	</entry>
	
	<!-- 관리자 커뮤니티 게시글 삭제  -->
	<entry key="deleteboardlist">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 관리자 커뮤니티 댓글 조회 -->
	<entry key="replyList">
		SELECT
		    R.REPLY_NO,
		    M.USER_ID,
		    M.NICKNAME,
		    R.REPLY_DATE,
		    R.REPLY_CONTENT
		FROM REPLY R
		JOIN MEMBER M USING(USER_NO)
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 관리자 커뮤니티 댓글 삭제 -->
	<entry key="deleteReplylist">
		UPDATE REPLY
		SET STATUS = 'N'
		WHERE REPLY_NO = ?
	</entry>
	
	<entry key="modalList">
		SELECT BOARD_NO,
    BOARD_CONTENT, 
    A.FILE_PATH || A.CHANGE_NAME AS "TITLEIMG"
		FROM BOARD B
		LEFT OUTER JOIN ATTACHMENT A	
			ON A.REF_NO = B.BOARD_NO
		WHERE B.BOARD_NO = 1
			</entry>
	
</properties>